{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Things-Learned I'm on a journey to learn all things Linux, DevOps, SysAdmin, Security, InFoSec & more. On this journey, I have found it super hard to understand things sometimes- if not all the time. The tech community has a tendency to write things in a way that assumes the reader is at a certain level, usually moderate to proficient. This repo will double as not only my notes (to reference at any time in my lifetime) but as a place for you, if you too find yourself in new territory hopefully this will help. I can only cover what I am exposed to, if there is something you would like to work on together, please let me know- I am happy and eager to learn!","title":"Introduction"},{"location":"Markdown%20Syntax/","text":"Learning Markdown Why am I doing this? Much like my username, I am a complete no0b when it comes to all things git, linux, command line and tech in general. I've realized in my path of enlightenment there is not tons of information that starts from the bottom of the barrel. Most things I have seen start from a moderate level or they give you the steps expecting you to know certain steps...I am making this for folks that want to learn from scratch, consider this us learning together. Why should I learn markdown? In order to work on Git, your repos will most likely be made in markdown. Best practice in Git is to create a \u201cREADME.md\u201d file. This file normally tells the git user what the project is about, installation information, and much more. Markdown has two versions: rendered version (the pretty/ easy on the eyes) & the raw version (this will look like code). See the image below for what I mean about \"code\". yes i know the above image has incorrect syntax, i will show you why if you keep on reading! Markdown Preview Tools & one tip If you're not yet a seasoned professional with markdown, it\u2019s great to be able to see a preview of the work you\u2019re doing, live. Currently I am on a Mac (iknow boo- but its what i have). I am using the Brackets open source tool in conjunction with the Brackets Mark Down Preview. This allows me to see what I am typing in real time. If don't get the extension you can preview it by clicking the lighting bolt icon and it will open up a chrome window for you to preview, pretty neat. Note that it only works with Chrome. Git has its own preview but its annoying to click between two tabs to see what you're doing as you type. File extension for markdown is \".md\". I will be looking into Ubuntu Options as well.For you windows users, I hate that OS so you're on your own- or write me and we can work together to find something! Markdown Syntax Titles & Subtitles If you're anything like me, you will find a cool project on Git and realize that (in some cases not all) that the publisher has made a complete mess of the page and its generally hard to read. I like things to be clean and clear. Dividing your README.md files into chapters (if you will) is a great way to do that. The hashtag # has to come first then a space then your title. No quotations \u2192 # your desired text - \u201c#\u201d creates your title (H1) - \u201c##\u201d creates your subtitle (H2) - \u201c###\u201d -\u201c######\u201d creates your other header types (H3-H6) Remember that space after the hashtag, spacing is key in markdown as I've learned. Paragraphs To write a pargraph(s), you simply have to write text underneath your title, theres no special spacing or characters needed. Depending on your markdown preview or where you're posting one thing to note is line breaks. Some places might as for a line skip to signal a line break. To break that down: if you are on line 2, and enter your text then press enter and continue the paragraph on line 3- your rendered version will not show the text spaced out, it would be one continuously line. To break that line, you have to skip a line and start, so that is 2, skip line 3, and continue your text on line 4. Your rendered version should show that desired line break. Lists If you want lists you can add those by using one of two symbols: + or - You can stack your lists by moving to the next line. If you want to indent, you put a space at the start of the line and enter either the + or -. See below for how that would look. Links & Images If you want to include links in your markdown files you enter the description within brackets \"[description here]\" then the url between parenthesis \"( https://www.youtube.com )\". Note that there should not be space between the brackets and parentheses- it wont work if there is. Click me For images, the syntax its a little tricky to understand but bear with me. You're going to include an exclamation point followed by brackets with the words \"alt text\" then your image URL between parentheses. You can pull image URLs by clicking the image, right click and selecting view info, this is different per website, OS, etc. Will work on a break down a few later. In-line Code To use the in-line code you're going to want to use the tilde symbol, this should normally be under the esc key on your keyboard. I will let you figure that one out as homework! When you want your code to appear in a block you enter three tildes, then the code you would like, followed by three more tildes on the next line. See the example below If you want to simply make your command seen, you can wrap the command between two tildes. When I say wrap that means one at the start of the command and one at the end. Tables I read somewhere that tables are not normally supported in markdown but Git allows it, so I will show you how to do that. The easiest way is with a photo. Take note of the pipe being used between each column. Additional, see that in every line there is a space. In the second line(58) you can see that there are three dashes it has to be 3. Also notice the spacing before and after each word and pipe- this is important if you want it to work. Spicy Text If you want to add a little style to your text you can do the following Bold: wrap your word in two asterisks \"*\" Italics: wrap your word in three asterisks Strike out: wrap your word in two tildes \"~\"","title":"Markdown Syntax"},{"location":"Resources/","text":"Resources This will be a location for links of useful information I have found that has helped me with issues, questions or just curiosities.","title":"Resources"},{"location":"Securedrop/","text":"SecureDrop At my current role, I am a SecureDrop (SD) admin. It was not known to me how intense this role would be and all the terminal jargon I would have to know. Because of this, I will also store here and share tips and tricks that I have learned throughout my 3 years working with the tool. What is it? SecureDrop is an open source whistleblower submission system that media organizations and NGOs can install to securely accept documents from anonymous sources. It was originally created by the late Aaron Swartz and is now managed by Freedom of the Press Foundation. SecureDrop is available in 20 languages. More info can be found here . For my day-to-day I check SD for anonymous submissions of potential news story leads. How does it work? Tails I will be limiting this section for security reasons. SecureDrop works with the The Amnesic Incognito Live System (tails). It\u2019s an OS system, similar to Linux, MacOS & windows. The beauty of it is that it boots from a USB, and wipes itself clean after each use. It works only with TOR browsers. Arguably considered the most way to secure yourself on the internet. Check out more on tails here . Tails works in conjunction with tor browsers that use .onion websites. Info on tor here The Computers There is an Admin Station & there is a Secure Viewing Station (svs) . The admin station has access to the internet, where I use tor to access \".onion\" sites. I pull attachments from said sites, load them to an encrypted USB. This USB is then taken to the SVS. Both machines utilize tails exclusively. The SVS is not connected to the internet. With the encrypted USB drive and another tails USB, the system boots. From there the contents of submissions and such are able to be viewed. The backbone of security for viewing submissions relies on long pass-phrases & PGP, check out the PGP documentation in my git for more on that. Maintenance of SD Being a sysadmin for SD requires understanding of the command line, SSH with sever(s), and the role of each USB. FPF attempts to make it easy with GUI options but I can attest that this does not always work. Command line When updating and you don\u2019t see it working with the gui V2 & V3 Upgrade Recently it was announced that the support for V2 onions would cease. Earlier I mentioned onion (tor browsers). Check back there in case you need a refresher. This leaves V2 running instances vulnerable, eliminate the vulnerability by switching to V3. Steps Verify ssh config files for Mon and App (your servers) Every securedrop instance will have the Admin USB and the Journalist USB, for any major configurations to SD, it will run from the admin USB only. First, open the terminal navigate to the SD directory- enter cd ~/Persistent/securedrop then verify that in servers (app & mon) have the files for ssh, they are titled app-ssh-ths & mon-ssh-ths . If they are there, excellent. If not, contact FPF support ASAP . Check your git status Within the same cd ~/Persistent/securedrop , enter git status . This will have the output of where the head detached at x.x.x . You want to make sure that its at the lastest version. Verify what servers app & mon are connected to Again, within the same directory type this command cat ~/Persistent/securedrop/install_files/ansible-base/app-source-ths . After this command is run there is a secret URL that should be displayed here. When I say secret its a URL made of tons of letters- this is not to be shared. In my case there was not a secret URL it was a plain IP address not good. What to do? Reconfigure the servers. Run ssh -vvv app ssh -vvv mon . This will produce a verbose output of the debug as its attempting to connect with the servers. Note that this point for me nothing was really showing beyond it not connecting. After that you have to reconfigure your admin USB stick. To reconfigure type ./securedrop-admin sdconfig . As a reminder this is all within the ~Persistent/securedrop directory. The sdconfig gets all the configurations ready to send to the servers. It will provide with an interactive CL prompt where you will go through a series of questions. In this section, we also pay close attention to the questions on enabling or disabling V2, V3. Be sure to click yes for V3. Keeping V2 on is optional, but less secure. After that completes, you can type cat ~/.ssh/config . This will show the ssh configuration file, and we should see the private onion URL rather than the plain IP address we were seeing earlier. Test ssh Connection To test your ssh connection to the severs enter ssh app & ssh mon . If your terminal switches to app@XXXX then you've successfully SSH'd. Back up the admin stick It's good practice to create back ups of the admin stick/ journalist stick(s) in case something goes wrong during an upgrade you can always roll back. To do that enter ./securedrop-admin backup . This command creates a tarball for the current settings. This will take a while, do not fret. Pushing the Configurations to the Servers So everything that was done so far was only done locally within the tails/admin USB. The severs have no idea, and they are still operating under the old configurations. To make sure the servers have the correct configurations installed you should do the following. Run ./securedrop-admin sdconfig \u2190 applies the changes locally once more Run ./securedrop-admin install \u2190 this will send the configurations made in the step above to the servers. End I would ensure that you still have ssh capabilities. See above. And finally I would make sure that you have access to both of your instances. If you enabled V3, there should be a new link you should take note of which will appear as you access the source and journalists interface on the tor browser!","title":"Securedrop"},{"location":"Systems.md/Web%20Services/","text":"Why? Systems is very vast, creating a space to show the things learned over time will be helpful in a refernce point to find things when stuck. Hope this helps. VPN If you ever have an issue with a connection one of the common places to check is your resolv.conf file. How? In your terminal with your editor of choice open resolv.conf, if you do not have this file the editor will automatically create it. You will want to add the namesever of the site you're trying to reach. Example: nameserver 172.X.XX.X.X When not needed feel free to comment it out. Example: #nameserver 172.X.XX.X.X The system wont read it. Once you have made this change, you will want to make sure that in your VPN client you go to the configuration settings and select something manual along the lines of \"allow changes manually to network changes\". ## External HardDrive When you have to move files, for example a tarball you need to execute the following command: tar -cvfz [NAME OF TARBALL].tar.gz [DESIRED LOCATION OF FILE] Connecting To Servers Working on systems will have you remoting into several machines. At times you will have to copy over tarballs from one machine into yours or your desired external storage device. For this you will use the scp command. In some cases your machine will not have a direct path to your key when you must list it out the command is as follows: scp -p 443 -i [PATH TO KEY] This command lists the port also to copy and where the key is to connect to the server. An example of copying contents from one server to an external hard drive would be: scp -p 443 -i ~/.ssh/[CERTIFICATE LOCATION] USERNAME@SEVERNAME:[LOCATION OF TARBALL][LOCATION WHERE YOU WANT IT COPIED] If you're lost on where to find the file path to your external drive (if thats where you want to push documents) Mac: Open the Disk Utility in the /Applications/Utilities/ folder, click on the partition, choose Info, and look at the disk identifier. Example: `Volumes/\"My Passport for Mac\" Linux: To be continued Windows: if you click on computer, then click the external drive in question, at the top of the window it will show you the path. Example: `C: Users\\sunflowerno0b\\USB Yes, this is very unique and its not commonly found, normally you indicate the scp command connect to the server and location of where you want to contents copied. 2FA Reset for OpenVPN VPNs allow for secure access to certain sites for your systems team. For example some teams may need only internal members to access your git. Authentication to these VPN protected sites normally include: ssl certificate username & password MFA When MFA needs to be rest, you should always look at the documentation. To rest the 2FA for a specific user using OpenVPN: ssh into the VPN (1XX.XX.XXX.XX) go into the root directory cd / run find / | grep sacli cd into the scripts folder run sudo ./scali -- user [USERNAME] --KEY \"prop_google_auth\" -- value \"false\" UserProPut Note that this will disable the google authenticator for the specific user. run sudo ./sacli -- user[USERNAME] -- lock 0 Google AuthLock this will reset the Google Authenticator for the user to rescan upon signing in again. Further options can be explored here VPN & LDAP When configuring VPN that will use your teams LDAP it is best practices for the username to match the LDAP profile when creating the user in admin. Should a user lose or replace phone","title":"Why?"}]}